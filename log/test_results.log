
===================================
Wed 24 Jul 15:16:00 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response

Items
  GET /items
    gets items path

ItemsController
  routing
    routes to #index

items/index
  renders a list of items

Finished in 0.19232 seconds (files took 0.88006 seconds to load)
4 examples, 0 failures


===================================
Sat 27 Jul 21:08:55 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response

Items
  GET /items
    gets items path

ItemsController
  routing
    routes to #index

items/index
  renders a list of items (FAILED - 1)

items/show
  renders attributes in <p> (FAILED - 2)

Failures:

  1) items/index renders a list of items
     Failure/Error: Item.create!(),

     ActiveRecord::RecordInvalid:
       Validation failed: Seller must exist
     # ./spec/views/items/index.html.erb_spec.rb:6:in `block (2 levels) in <main>'

  2) items/show renders attributes in <p>
     Failure/Error: @item = assign(:item, Item.create!())

     ActiveRecord::RecordInvalid:
       Validation failed: Seller must exist
     # ./spec/views/items/show.html.erb_spec.rb:5:in `block (2 levels) in <main>'

Finished in 0.23139 seconds (files took 0.92773 seconds to load)
5 examples, 2 failures

Failed examples:

rspec ./spec/views/items/index.html.erb_spec.rb:11 # items/index renders a list of items
rspec ./spec/views/items/show.html.erb_spec.rb:8 # items/show renders attributes in <p>



===================================
Mon 29 Jul 12:28:37 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

Items
  GET /items
    gets items path

ItemsController
  routing
    routes to #index

items/index
  renders a list of items

items/show
  renders attributes in <p>

Finished in 0.37391 seconds (files took 1.04 seconds to load)
6 examples, 0 failures



===================================
Tue 30 Jul 20:26:47 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

Items
  GET /items
    gets items path

ItemsController
  routing
    routes to #index

items/index
  renders a list of items

items/show
  renders attributes in <p>

Finished in 0.33335 seconds (files took 0.88931 seconds to load)
6 examples, 0 failures



===================================
Tue 30 Jul 20:53:52 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

Items
  GET /items
    gets items path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT (FAILED - 1)
    routes to #update via PATCH (FAILED - 2)
    routes to #destroy

items/edit
  renders the edit item form (FAILED - 3)

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

Failures:

  1) ItemsController routing routes to #update via PUT
     Failure/Error: expect(:put => "/items/1").to route_to("items#update", :id => "1")
       No route matches "/items/1"
     # ./spec/routing/items_routing_spec.rb:27:in `block (3 levels) in <main>'

  2) ItemsController routing routes to #update via PATCH
     Failure/Error: expect(:patch => "/items/1").to route_to("items#update", :id => "1")
       No route matches "/items/1"
     # ./spec/routing/items_routing_spec.rb:31:in `block (3 levels) in <main>'

  3) items/edit renders the edit item form
     Failure/Error: <%= form_with model: @item, url: edit_item_path, local: true do |form| %>

     ActionView::Template::Error:
       No route matches {:action=>"edit", :controller=>"items"}, missing required keys: [:id]
     # ./app/views/items/edit.html.erb:4:in `_app_views_items_edit_html_erb__2456088360390991927_47290025443620'
     # ./spec/views/items/edit.html.erb_spec.rb:11:in `block (2 levels) in <main>'
     # ------------------
     # --- Caused by: ---
     # ActionController::UrlGenerationError:
     #   No route matches {:action=>"edit", :controller=>"items"}, missing required keys: [:id]
     #   ./app/views/items/edit.html.erb:4:in `_app_views_items_edit_html_erb__2456088360390991927_47290025443620'

Finished in 0.35542 seconds (files took 0.92923 seconds to load)
15 examples, 3 failures

Failed examples:

rspec ./spec/routing/items_routing_spec.rb:26 # ItemsController routing routes to #update via PUT
rspec ./spec/routing/items_routing_spec.rb:30 # ItemsController routing routes to #update via PATCH
rspec ./spec/views/items/edit.html.erb_spec.rb:10 # items/edit renders the edit item form



===================================
Wed 31 Jul 13:45:39 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller
  GET /seller/:seller_id
    gets seller_path (FAILED - 1)

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form (FAILED - 2)

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) Seller GET /seller/:seller_id gets seller_path
     Failure/Error: get seller_path

     ActionController::UrlGenerationError:
       No route matches {:action=>"index", :controller=>"seller"}, missing required keys: [:seller_id]
     # ./spec/requests/sellers_spec.rb:7:in `block (3 levels) in <main>'

  2) items/edit renders the edit item form
     Failure/Error: <%= form_with model: @item, url: edit_item_path, local: true do |form| %>

     ActionView::Template::Error:
       No route matches {:action=>"edit", :controller=>"items"}, missing required keys: [:id]
     # ./app/views/items/edit.html.erb:4:in `_app_views_items_edit_html_erb___1672616503364034241_47403172510440'
     # ./spec/views/items/edit.html.erb_spec.rb:11:in `block (2 levels) in <main>'
     # ------------------
     # --- Caused by: ---
     # ActionController::UrlGenerationError:
     #   No route matches {:action=>"edit", :controller=>"items"}, missing required keys: [:id]
     #   ./app/views/items/edit.html.erb:4:in `_app_views_items_edit_html_erb___1672616503364034241_47403172510440'

Finished in 1.35 seconds (files took 1.05 seconds to load)
23 examples, 2 failures, 3 pending

Failed examples:

rspec ./spec/requests/sellers_spec.rb:5 # Seller GET /seller/:seller_id gets seller_path
rspec ./spec/views/items/edit.html.erb_spec.rb:10 # items/edit renders the edit item form



===================================
Wed 31 Jul 13:55:34 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller
  GET /seller/:seller_id
    gets seller_path (FAILED - 1)

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT (FAILED - 2)
    routes to #update via PATCH (FAILED - 3)
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) Seller GET /seller/:seller_id gets seller_path
     Failure/Error: get seller_path

     ActionController::UrlGenerationError:
       No route matches {:action=>"index", :controller=>"seller"}, missing required keys: [:seller_id]
     # ./spec/requests/sellers_spec.rb:7:in `block (3 levels) in <main>'

  2) ItemsController routing routes to #update via PUT
     Failure/Error: expect(:put => "/items/1/edit").to route_to("items#update", :id => "1")
       No route matches "/items/1/edit"
     # ./spec/routing/items_routing_spec.rb:27:in `block (3 levels) in <main>'

  3) ItemsController routing routes to #update via PATCH
     Failure/Error: expect(:patch => "/items/1/edit").to route_to("items#update", :id => "1")
       No route matches "/items/1/edit"
     # ./spec/routing/items_routing_spec.rb:31:in `block (3 levels) in <main>'

Finished in 1.23 seconds (files took 0.97202 seconds to load)
23 examples, 3 failures, 3 pending

Failed examples:

rspec ./spec/requests/sellers_spec.rb:5 # Seller GET /seller/:seller_id gets seller_path
rspec ./spec/routing/items_routing_spec.rb:26 # ItemsController routing routes to #update via PUT
rspec ./spec/routing/items_routing_spec.rb:30 # ItemsController routing routes to #update via PATCH



===================================
Thu 1 Aug 18:05:41 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller
  GET /seller/:seller_id
    gets seller_path (FAILED - 1)

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) Seller GET /seller/:seller_id gets seller_path
     Failure/Error: get seller_path

     ActionController::UrlGenerationError:
       No route matches {:action=>"index", :controller=>"seller"}, missing required keys: [:seller_id]
     # ./spec/requests/sellers_spec.rb:7:in `block (3 levels) in <main>'

Finished in 0.91357 seconds (files took 0.97241 seconds to load)
23 examples, 1 failure, 3 pending

Failed examples:

rspec ./spec/requests/sellers_spec.rb:5 # Seller GET /seller/:seller_id gets seller_path



===================================
Thu 1 Aug 22:29:10 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item (FAILED - 1)
      redirects to the created item (FAILED - 2)
    with invalid params
      returns a success response (i.e. to display the 'new' template) (FAILED - 3)
  PUT #update
    with valid params
      updates the requested item (FAILED - 4)
      redirects to the item (FAILED - 5)
    with invalid params
      returns a success response (i.e. to display the 'edit' template) (FAILED - 6)
  DELETE #destroy
    destroys the requested item (FAILED - 7)
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) ItemsController POST #create with valid params creates a new Item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:83:in `block (5 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:82:in `block (4 levels) in <top (required)>'

  2) ItemsController POST #create with valid params redirects to the created item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:88:in `block (4 levels) in <top (required)>'

  3) ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
     Failure/Error: {seller_id: User.first.id, title: "", price: "22"}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:40:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:95:in `block (4 levels) in <top (required)>'

  4) ItemsController PUT #update with valid params updates the requested item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:108:in `block (4 levels) in <top (required)>'

  5) ItemsController PUT #update with valid params redirects to the item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:115:in `block (4 levels) in <top (required)>'

  6) ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:123:in `block (4 levels) in <top (required)>'

  7) ItemsController DELETE #destroy destroys the requested item
     Failure/Error:
       expect {
         delete :destroy, params: {id: item.to_param}, session: valid_session
       }.to change(Item, :count).by(-1)

       expected `Item.count` to have changed by -1, but was changed by 0
     # ./spec/controllers/items_controller_spec.rb:134:in `block (3 levels) in <top (required)>'

Finished in 1.1 seconds (files took 1.11 seconds to load)
33 examples, 7 failures, 3 pending

Failed examples:

rspec ./spec/controllers/items_controller_spec.rb:81 # ItemsController POST #create with valid params creates a new Item
rspec ./spec/controllers/items_controller_spec.rb:87 # ItemsController POST #create with valid params redirects to the created item
rspec ./spec/controllers/items_controller_spec.rb:94 # ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
rspec ./spec/controllers/items_controller_spec.rb:107 # ItemsController PUT #update with valid params updates the requested item
rspec ./spec/controllers/items_controller_spec.rb:114 # ItemsController PUT #update with valid params redirects to the item
rspec ./spec/controllers/items_controller_spec.rb:122 # ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)
rspec ./spec/controllers/items_controller_spec.rb:131 # ItemsController DELETE #destroy destroys the requested item



===================================
Thu 1 Aug 22:31:57 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item (FAILED - 1)
      redirects to the created item (FAILED - 2)
    with invalid params
      returns a success response (i.e. to display the 'new' template) (FAILED - 3)
  PUT #update
    with valid params
      updates the requested item (FAILED - 4)
      redirects to the item (FAILED - 5)
    with invalid params
      returns a success response (i.e. to display the 'edit' template) (FAILED - 6)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) ItemsController POST #create with valid params creates a new Item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:83:in `block (5 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:82:in `block (4 levels) in <top (required)>'

  2) ItemsController POST #create with valid params redirects to the created item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:88:in `block (4 levels) in <top (required)>'

  3) ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
     Failure/Error: {seller_id: User.first.id, title: "", price: "22"}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:40:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:95:in `block (4 levels) in <top (required)>'

  4) ItemsController PUT #update with valid params updates the requested item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:111:in `block (4 levels) in <top (required)>'

  5) ItemsController PUT #update with valid params redirects to the item
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:118:in `block (4 levels) in <top (required)>'

  6) ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)
     Failure/Error: {seller_id: User.first.id, title: "title", description: "description", condition: :brand_new, category: :toys, sold: false, price: 25.00}

     NoMethodError:
       undefined method `id' for nil:NilClass
     # ./spec/controllers/items_controller_spec.rb:36:in `block (2 levels) in <top (required)>'
     # ./spec/controllers/items_controller_spec.rb:126:in `block (4 levels) in <top (required)>'

Finished in 1.16 seconds (files took 0.95375 seconds to load)
33 examples, 6 failures, 3 pending

Failed examples:

rspec ./spec/controllers/items_controller_spec.rb:81 # ItemsController POST #create with valid params creates a new Item
rspec ./spec/controllers/items_controller_spec.rb:87 # ItemsController POST #create with valid params redirects to the created item
rspec ./spec/controllers/items_controller_spec.rb:94 # ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
rspec ./spec/controllers/items_controller_spec.rb:110 # ItemsController PUT #update with valid params updates the requested item
rspec ./spec/controllers/items_controller_spec.rb:117 # ItemsController PUT #update with valid params redirects to the item
rspec ./spec/controllers/items_controller_spec.rb:125 # ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)



===================================
Thu 1 Aug 22:51:50 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template) (FAILED - 1)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template) (FAILED - 2)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  2) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  3) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
     Failure/Error: expect(response).to be_successful
       expected `#<ActionDispatch::TestResponse:0x000055d19bfa0178 @mon_mutex=#<Thread::Mutex:0x000055d19bfb3ea8>, @mo...ch::Http::Headers:0x000055d19bfc1fd0 @req=#<ActionController::TestRequest:0x000055d19bfa0718 ...>>>>.successful?` to return true, got false
     # ./spec/controllers/items_controller_spec.rb:102:in `block (4 levels) in <top (required)>'

  2) ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)
     Failure/Error: expect(response).to be_successful
       expected `#<ActionDispatch::TestResponse:0x000055d19a7dd680 @mon_mutex=#<Thread::Mutex:0x000055d19a7dd5b8>, @mo...ch::Http::Headers:0x000055d19a7e5740 @req=#<ActionController::TestRequest:0x000055d19a7dd8b0 ...>>>>.successful?` to return true, got false
     # ./spec/controllers/items_controller_spec.rb:137:in `block (4 levels) in <top (required)>'

Finished in 1.19 seconds (files took 0.92171 seconds to load)
33 examples, 2 failures, 3 pending

Failed examples:

rspec ./spec/controllers/items_controller_spec.rb:98 # ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
rspec ./spec/controllers/items_controller_spec.rb:132 # ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)



===================================
Mon 5 Aug 13:48:35 AEST 2019
===================================


BuyerController
  GET #bought
    returns http success (FAILED - 1)

ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response (FAILED - 2)
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template) (FAILED - 3)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template) (FAILED - 4)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

BuyerHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb (PENDING: Not yet implemented)

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Purchase
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

buyer/bought.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/buyer/bought.html.erb_spec.rb (PENDING: Not yet implemented)

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) BuyerHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/buyer_helper_spec.rb:14

  2) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  3) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  4) Purchase add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb
     # Not yet implemented
     # ./spec/models/purchase_spec.rb:4

  5) buyer/bought.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/buyer/bought.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/buyer/bought.html.erb_spec.rb:4

  6) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) BuyerController GET #bought returns http success
     Failure/Error: get :bought

     AbstractController::ActionNotFound:
       The action 'bought' could not be found for BuyerController
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/rails-controller-testing-1.0.4/lib/rails/controller/testing/template_assertions.rb:61:in `process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:35:in `block in process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:102:in `catch'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:102:in `_catch_warden'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:35:in `process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/rails-controller-testing-1.0.4/lib/rails/controller/testing/integration.rb:13:in `block (2 levels) in <module:Integration>'
     # ./spec/controllers/buyer_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  2) ItemsController GET #new returns a success response
     Failure/Error: expect(response).to be_successful
       expected `#<ActionDispatch::TestResponse:0x000055730af00960 @mon_mutex=#<Thread::Mutex:0x000055730af008e8>, @mo...ch::Http::Headers:0x000055730af06c48 @req=#<ActionController::TestRequest:0x000055730af00ac8 ...>>>>.successful?` to return true, got false
     # ./spec/controllers/items_controller_spec.rb:66:in `block (3 levels) in <main>'

  3) ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
     Failure/Error: expect(response).to be_successful
       expected `#<ActionDispatch::TestResponse:0x000055730b19b670 @mon_mutex=#<Thread::Mutex:0x000055730b19b5f8>, @mo...ch::Http::Headers:0x000055730b198c90 @req=#<ActionController::TestRequest:0x000055730b19b7d8 ...>>>>.successful?` to return true, got false
     # ./spec/controllers/items_controller_spec.rb:102:in `block (4 levels) in <main>'

  4) ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)
     Failure/Error: expect(response).to be_successful
       expected `#<ActionDispatch::TestResponse:0x000055730b2af048 @mon_mutex=#<Thread::Mutex:0x000055730b2aefd0>, @mo...ch::Http::Headers:0x000055730b2ac4b0 @req=#<ActionController::TestRequest:0x000055730b2af1b0 ...>>>>.successful?` to return true, got false
     # ./spec/controllers/items_controller_spec.rb:137:in `block (4 levels) in <main>'

Finished in 1.53 seconds (files took 1.01 seconds to load)
37 examples, 4 failures, 6 pending

Failed examples:

rspec ./spec/controllers/buyer_controller_spec.rb:6 # BuyerController GET #bought returns http success
rspec ./spec/controllers/items_controller_spec.rb:64 # ItemsController GET #new returns a success response
rspec ./spec/controllers/items_controller_spec.rb:98 # ItemsController POST #create with invalid params returns a success response (i.e. to display the 'new' template)
rspec ./spec/controllers/items_controller_spec.rb:132 # ItemsController PUT #update with invalid params returns a success response (i.e. to display the 'edit' template)



===================================
Mon 5 Aug 17:39:02 AEST 2019
===================================


BuyerController
  GET #bought
    returns http success (FAILED - 1)

ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

BuyerHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb (PENDING: Not yet implemented)

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Purchase
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

buyer/bought.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/buyer/bought.html.erb_spec.rb (PENDING: Not yet implemented)

items/edit
  renders the edit item form (FAILED - 2)

items/index
  renders a list of items (FAILED - 3)

items/new
  renders new item form

items/show
  renders attributes in <p> (FAILED - 4)

purchases/new.html.erb
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb (PENDING: Not yet implemented)

seller/index
  renders a list of items (FAILED - 5)

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) BuyerHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/buyer_helper_spec.rb:14

  2) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  3) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  4) Purchase add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb
     # Not yet implemented
     # ./spec/models/purchase_spec.rb:4

  5) buyer/bought.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/buyer/bought.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/buyer/bought.html.erb_spec.rb:4

  6) purchases/new.html.erb add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/views/purchases/new.html.erb_spec.rb
     # Not yet implemented
     # ./spec/views/purchases/new.html.erb_spec.rb:4

Failures:

  1) BuyerController GET #bought returns http success
     Failure/Error: get :bought

     AbstractController::ActionNotFound:
       The action 'bought' could not be found for BuyerController
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/rails-controller-testing-1.0.4/lib/rails/controller/testing/template_assertions.rb:61:in `process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:35:in `block in process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:102:in `catch'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:102:in `_catch_warden'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/devise-4.6.2/lib/devise/test/controller_helpers.rb:35:in `process'
     # /home/carlie/.rvm/gems/ruby-2.6.3/gems/rails-controller-testing-1.0.4/lib/rails/controller/testing/integration.rb:13:in `block (2 levels) in <module:Integration>'
     # ./spec/controllers/buyer_controller_spec.rb:7:in `block (3 levels) in <top (required)>'

  2) items/edit renders the edit item form
     Failure/Error: @item = assign(:item, Item.create!(seller_id: @user.id))

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/items/edit.html.erb_spec.rb:7:in `block (2 levels) in <main>'

  3) items/index renders a list of items
     Failure/Error: Item.create!(seller_id: user.id),

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/items/index.html.erb_spec.rb:8:in `block (2 levels) in <main>'

  4) items/show renders attributes in <p>
     Failure/Error: @item = assign(:item, Item.create!(seller_id: user.id))

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/items/show.html.erb_spec.rb:6:in `block (2 levels) in <main>'

  5) seller/index renders a list of items
     Failure/Error: Item.create!(seller_id: @user.id),

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/seller/index.html.erb_spec.rb:7:in `block (2 levels) in <main>'

Finished in 1.07 seconds (files took 1 second to load)
37 examples, 5 failures, 6 pending

Failed examples:

rspec ./spec/controllers/buyer_controller_spec.rb:6 # BuyerController GET #bought returns http success
rspec ./spec/views/items/edit.html.erb_spec.rb:10 # items/edit renders the edit item form
rspec ./spec/views/items/index.html.erb_spec.rb:13 # items/index renders a list of items
rspec ./spec/views/items/show.html.erb_spec.rb:10 # items/show renders attributes in <p>
rspec ./spec/views/seller/index.html.erb_spec.rb:12 # seller/index renders a list of items



===================================
Mon 5 Aug 21:13:11 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

BuyerHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb (PENDING: Not yet implemented)

PurchasesHelper
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb (PENDING: Not yet implemented)

Item
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb (PENDING: Not yet implemented)

Purchase
  add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb (PENDING: Not yet implemented)

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items (FAILED - 1)

items/new
  renders new item form

items/show
  renders attributes in <p> (FAILED - 2)

purchases/new.html.erb
  renders the shopping cart (FAILED - 3)

seller/index
  renders a list of items (FAILED - 4)

Pending: (Failures listed here are expected and do not affect your suite's status)

  1) BuyerHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/buyer_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/buyer_helper_spec.rb:14

  2) PurchasesHelper add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/helpers/purchases_helper_spec.rb
     # Not yet implemented
     # ./spec/helpers/purchases_helper_spec.rb:14

  3) Item add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/item_spec.rb
     # Not yet implemented
     # ./spec/models/item_spec.rb:4

  4) Purchase add some examples to (or delete) /home/carlie/School/rails/KidsWorld/spec/models/purchase_spec.rb
     # Not yet implemented
     # ./spec/models/purchase_spec.rb:4

Failures:

  1) items/index renders a list of items
     Failure/Error: Item.create!(seller_id: user.id),

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/items/index.html.erb_spec.rb:8:in `block (2 levels) in <main>'

  2) items/show renders attributes in <p>
     Failure/Error: @item = assign(:item, Item.create!(seller_id: user.id))

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/items/show.html.erb_spec.rb:6:in `block (2 levels) in <main>'

  3) purchases/new.html.erb renders the shopping cart
     Failure/Error: sessionId: '<%= @session.id %>'

     ActionView::Template::Error:
       undefined method `id' for nil:NilClass
     # ./app/views/purchases/new.html.erb:35:in `_app_views_purchases_new_html_erb___2237467737395654008_46933677165860'
     # ./spec/views/purchases/new.html.erb_spec.rb:12:in `block (2 levels) in <main>'
     # ------------------
     # --- Caused by: ---
     # NoMethodError:
     #   undefined method `id' for nil:NilClass
     #   ./app/views/purchases/new.html.erb:35:in `_app_views_purchases_new_html_erb___2237467737395654008_46933677165860'

  4) seller/index renders a list of items
     Failure/Error: Item.create!(seller_id: @user.id),

     ActiveRecord::RecordInvalid:
       Validation failed: Title can't be blank, Description can't be blank, Price is not a number
     # ./spec/views/seller/index.html.erb_spec.rb:7:in `block (2 levels) in <main>'

Finished in 1.16 seconds (files took 1.19 seconds to load)
35 examples, 4 failures, 4 pending

Failed examples:

rspec ./spec/views/items/index.html.erb_spec.rb:13 # items/index renders a list of items
rspec ./spec/views/items/show.html.erb_spec.rb:10 # items/show renders attributes in <p>
rspec ./spec/views/purchases/new.html.erb_spec.rb:11 # purchases/new.html.erb renders the shopping cart
rspec ./spec/views/seller/index.html.erb_spec.rb:12 # seller/index renders a list of items



===================================
Mon 5 Aug 21:37:03 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success

SellerController
  GET #index
    returns a success response

Item
  creates a new item

Purchase
  creates a new purchased item

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

seller/index
  renders a list of items

Finished in 1.22 seconds (files took 1.08 seconds to load)
32 examples, 0 failures



===================================
Mon 5 Aug 22:05:12 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success
  GET #complete
    returns http success
  GET #receipt
    returns http success

SellerController
  GET #index
    returns a success response
  GET #sold
    returns a success response

Item
  creates a new item

Purchase
  creates a new purchased item

User
  creates a new user

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

seller/index
  renders a list of items

Finished in 1.18 seconds (files took 0.99028 seconds to load)
36 examples, 0 failures



===================================
Tue 6 Aug 11:40:31 AEST 2019
===================================


ItemsController
  GET #index
    returns a success response
  GET #show
    returns a success response
  GET #new
    returns a success response
  GET #edit
    returns a success response
  POST #create
    with valid params
      creates a new Item
      redirects to the created item
    with invalid params
      returns a success response (i.e. to display the 'new' template)
  PUT #update
    with valid params
      updates the requested item
      redirects to the item
    with invalid params
      returns a success response (i.e. to display the 'edit' template)
  DELETE #destroy
    destroys the requested item
    redirects to the items list

PurchasesController
  GET #new
    returns http success
  GET #complete
    returns http success
  GET #receipt
    returns http success

SellerController
  GET #index
    returns a success response
  GET #sold
    returns a success response

Item
  creates a new item

Purchase
  creates a new purchased item

User
  creates a new user

Items
  GET /items
    gets items path

Seller Request
  GET /seller/:seller_id requests
    gets seller_path

ItemsController
  routing
    routes to #index
    routes to #new
    routes to #show
    routes to #edit
    routes to #create
    routes to #update via PUT
    routes to #update via PATCH
    routes to #destroy

SellerController
  routing
    routes to #index

items/edit
  renders the edit item form

items/index
  renders a list of items

items/new
  renders new item form

items/show
  renders attributes in <p>

seller/index
  renders a list of items

Finished in 1.57 seconds (files took 1.11 seconds to load)
36 examples, 0 failures


